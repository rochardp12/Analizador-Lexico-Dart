LexToken(commentBlock,'/* Block comment example\nThis is a test for the block comment token.\n*/',65,1)
LexToken(commentLine,'// Line comment example',67,74)
LexToken(PUBLIC,'public',68,98)
LexToken(CLASS,'class',68,105)
LexToken(NEWDATATYPE,'TestClass',68,111)
LexToken(LBRACE,'{',68,121)
LexToken(PRIVATE,'private',69,127)
LexToken(INT,'int',69,135)
LexToken(VARIABLE,'number',69,139)
LexToken(EQUALS,'=',69,146)
LexToken(NUMBER,42,69,148)
LexToken(DOTCOMMA,';',69,150)
LexToken(PUBLIC,'public',70,156)
LexToken(DOUBLE,'double',70,163)
LexToken(VARIABLE,'decimalNumber',70,170)
LexToken(EQUALS,'=',70,184)
LexToken(FLOAT,3.14,70,186)
LexToken(DOTCOMMA,';',70,190)
LexToken(PROTECTED,'protected',71,196)
LexToken(BOOLEAN,'boolean',71,206)
LexToken(VARIABLE,'isValid',71,214)
LexToken(EQUALS,'=',71,222)
LexToken(VARIABLE,'true',71,224)
LexToken(DOTCOMMA,';',71,228)
LexToken(STATIC,'static',72,234)
LexToken(FINAL,'final',72,241)
LexToken(STRING,'String',72,247)
LexToken(NEWDATATYPE,'CONSTANT_STRING',72,254)
LexToken(EQUALS,'=',72,270)
LexToken(CHAINCHAR,'"Hello"',72,272)
LexToken(DOTCOMMA,';',72,279)
LexToken(PRIVATE,'private',73,285)
LexToken(LIST,'List',73,293)
LexToken(INTERNDATATYPE,'<Integer>',73,297)
LexToken(VARIABLE,'myList',73,307)
LexToken(EQUALS,'=',73,314)
LexToken(NEW,'new',73,316)
LexToken(NEWDATATYPE,'ArrayList',73,320)
LexToken(LANGLE,'<',73,329)
LexToken(RANGLE,'>',73,330)
LexToken(LPAREN,'(',73,331)
LexToken(RPAREN,')',73,332)
LexToken(DOTCOMMA,';',73,333)
LexToken(PRIVATE,'private',74,339)
LexToken(NEWDATATYPE,'Map',74,347)
LexToken(LANGLE,'<',74,350)
LexToken(STRING,'String',74,351)
LexToken(COMMA,',',74,357)
LexToken(NEWDATATYPE,'Integer',74,359)
LexToken(RANGLE,'>',74,366)
LexToken(VARIABLE,'myMap',74,368)
LexToken(EQUALS,'=',74,374)
LexToken(NEW,'new',74,376)
LexToken(NEWDATATYPE,'HashMap',74,380)
LexToken(LANGLE,'<',74,387)
LexToken(RANGLE,'>',74,388)
LexToken(LPAREN,'(',74,389)
LexToken(RPAREN,')',74,390)
LexToken(DOTCOMMA,';',74,391)
LexToken(PUBLIC,'public',76,398)
LexToken(STATIC,'static',76,405)
LexToken(VOID,'void',76,412)
LexToken(MAIN,'main',76,417)
LexToken(LPAREN,'(',76,421)
LexToken(STRING,'String',76,422)
LexToken(LBRACKET,'[',76,428)
LexToken(RBRACKET,']',76,429)
LexToken(VARIABLE,'args',76,431)
LexToken(RPAREN,')',76,435)
LexToken(LBRACE,'{',76,437)
LexToken(NEWDATATYPE,'TestClass',77,447)
LexToken(VARIABLE,'instance',77,457)
LexToken(EQUALS,'=',77,466)
LexToken(NEW,'new',77,468)
LexToken(NEWDATATYPE,'TestClass',77,472)
LexToken(LPAREN,'(',77,481)
LexToken(RPAREN,')',77,482)
LexToken(DOTCOMMA,';',77,483)
LexToken(VARIABLE,'instance',78,493)
LexToken(DATAFUNCTION,'.testMethod()',78,501)
LexToken(DOTCOMMA,';',78,514)
LexToken(RBRACE,'}',79,520)
LexToken(PUBLIC,'public',81,527)
LexToken(VOID,'void',81,534)
LexToken(FUNCTION,'testMethod()',81,539)
LexToken(LBRACE,'{',81,552)
LexToken(INT,'int',82,562)
LexToken(VARIABLE,'localVar',82,566)
LexToken(EQUALS,'=',82,575)
LexToken(NUMBER,10,82,577)
LexToken(DOTCOMMA,';',82,579)
LexToken(DOUBLE,'double',83,589)
LexToken(VARIABLE,'pi',83,596)
LexToken(EQUALS,'=',83,599)
LexToken(FLOAT,3.14,83,601)
LexToken(DOTCOMMA,';',83,605)
LexToken(BOOLEAN,'boolean',84,615)
LexToken(VARIABLE,'flag',84,623)
LexToken(EQUALS,'=',84,628)
LexToken(VARIABLE,'false',84,630)
LexToken(DOTCOMMA,';',84,635)
LexToken(STRING,'String',85,645)
LexToken(VARIABLE,'greeting',85,652)
LexToken(EQUALS,'=',85,661)
LexToken(CHAINCHAR,'"Hello, World!"',85,663)
LexToken(DOTCOMMA,';',85,678)
LexToken(VARIABLE,'char',86,688)
LexToken(VARIABLE,'initial',86,693)
LexToken(EQUALS,'=',86,701)
LexToken(CHAINCHAR,"'A'",86,703)
LexToken(DOTCOMMA,';',86,706)
LexToken(IF,'if',88,725)
LexToken(LPAREN,'(',88,728)
LexToken(VARIABLE,'localVar',88,729)
LexToken(RANGLE,'>',88,738)
LexToken(NUMBER,5,88,740)
LexToken(AND,'&&',88,742)
LexToken(VARIABLE,'flag',88,745)
LexToken(EQUALS,'=',88,750)
LexToken(EQUALS,'=',88,751)
LexToken(VARIABLE,'false',88,753)
LexToken(RPAREN,')',88,758)
LexToken(LBRACE,'{',88,760)
LexToken(PRINT,'print',89,774)
LexToken(LPAREN,'(',89,779)
LexToken(CHAINCHAR,'"localVar is greater than 5"',89,780)
LexToken(RPAREN,')',89,808)
LexToken(DOTCOMMA,';',89,809)
LexToken(RBRACE,'}',90,819)
LexToken(ELSE,'else',90,821)
LexToken(LBRACE,'{',90,826)
LexToken(PRINT,'print',91,840)
LexToken(LPAREN,'(',91,845)
LexToken(CHAINCHAR,'"localVar is less than or equal to 5"',91,846)
LexToken(RPAREN,')',91,883)
LexToken(DOTCOMMA,';',91,884)
LexToken(RBRACE,'}',92,894)
LexToken(FOR,'for',94,905)
LexToken(LPAREN,'(',94,909)
LexToken(INT,'int',94,910)
LexToken(VARIABLE,'i',94,914)
LexToken(EQUALS,'=',94,916)
LexToken(NUMBER,0,94,918)
LexToken(DOTCOMMA,';',94,919)
LexToken(VARIABLE,'i',94,921)
LexToken(LANGLE,'<',94,923)
LexToken(NUMBER,10,94,925)
LexToken(DOTCOMMA,';',94,927)
LexToken(VARIABLE,'i',94,929)
LexToken(PLUS,'+',94,930)
LexToken(PLUS,'+',94,931)
LexToken(RPAREN,')',94,932)
LexToken(LBRACE,'{',94,934)
LexToken(VARIABLE,'myList',95,948)
LexToken(DATAFUNCTION,'.add(i)',95,954)
LexToken(DOTCOMMA,';',95,961)
LexToken(RBRACE,'}',96,971)
LexToken(WHILE,'while',98,982)
LexToken(LPAREN,'(',98,988)
LexToken(VARIABLE,'localVar',98,989)
LexToken(RANGLE,'>',98,998)
LexToken(NUMBER,0,98,1000)
LexToken(RPAREN,')',98,1001)
LexToken(LBRACE,'{',98,1003)
LexToken(VARIABLE,'localVar',99,1017)
LexToken(MINUS,'-',99,1025)
LexToken(MINUS,'-',99,1026)
LexToken(DOTCOMMA,';',99,1027)
LexToken(RBRACE,'}',100,1037)
LexToken(SWITCH,'switch',102,1048)
LexToken(LPAREN,'(',102,1055)
LexToken(VARIABLE,'localVar',102,1056)
LexToken(RPAREN,')',102,1064)
LexToken(LBRACE,'{',102,1066)
LexToken(CASE,'case',103,1080)
LexToken(NUMBER,0,103,1085)
LexToken(TWODOTS,':',103,1086)
LexToken(PRINT,'print',104,1104)
LexToken(LPAREN,'(',104,1109)
LexToken(CHAINCHAR,'"localVar is zero"',104,1110)
LexToken(RPAREN,')',104,1128)
LexToken(DOTCOMMA,';',104,1129)
LexToken(BREAK,'break',105,1147)
LexToken(DOTCOMMA,';',105,1152)
LexToken(DEFAULT,'default',106,1166)
LexToken(TWODOTS,':',106,1173)
LexToken(PRINT,'print',107,1191)
LexToken(LPAREN,'(',107,1196)
LexToken(CHAINCHAR,'"localVar is not zero"',107,1197)
LexToken(RPAREN,')',107,1219)
LexToken(DOTCOMMA,';',107,1220)
LexToken(BREAK,'break',108,1238)
LexToken(DOTCOMMA,';',108,1243)
LexToken(RBRACE,'}',109,1253)
LexToken(TRY,'try',111,1264)
LexToken(LBRACE,'{',111,1268)
LexToken(INT,'int',112,1282)
LexToken(VARIABLE,'result',112,1286)
LexToken(EQUALS,'=',112,1293)
LexToken(VARIABLE,'localVar',112,1295)
LexToken(DIVIDE,'/',112,1304)
LexToken(NUMBER,0,112,1306)
LexToken(DOTCOMMA,';',112,1307)
LexToken(RBRACE,'}',113,1317)
LexToken(CATCH,'catch',113,1319)
LexToken(LPAREN,'(',113,1325)
LexToken(NEWDATATYPE,'ArithmeticException',113,1326)
LexToken(VARIABLE,'e',113,1346)
LexToken(RPAREN,')',113,1347)
LexToken(LBRACE,'{',113,1349)
LexToken(PRINT,'print',114,1363)
LexToken(LPAREN,'(',114,1368)
LexToken(CHAINCHAR,'"Division by zero!"',114,1369)
LexToken(RPAREN,')',114,1388)
LexToken(DOTCOMMA,';',114,1389)
LexToken(RBRACE,'}',115,1399)
LexToken(FINALLY,'finally',115,1401)
LexToken(LBRACE,'{',115,1409)
LexToken(PRINT,'print',116,1423)
LexToken(LPAREN,'(',116,1428)
LexToken(CHAINCHAR,'"End of try-catch block"',116,1429)
LexToken(RPAREN,')',116,1453)
LexToken(DOTCOMMA,';',116,1454)
LexToken(RBRACE,'}',117,1464)
LexToken(VARIABLE,'number',119,1475)
LexToken(EQUALS,'=',119,1482)
LexToken(LPAREN,'(',119,1484)
LexToken(INT,'int',119,1485)
LexToken(RPAREN,')',119,1488)
LexToken(VARIABLE,'pi',119,1490)
LexToken(DOTCOMMA,';',119,1492)
LexToken(commentLine,'// Casting',119,1494)
LexToken(VARIABLE,'myMap',120,1513)
LexToken(DATAATTRIBUTE,'.put',120,1518)
LexToken(LPAREN,'(',120,1522)
LexToken(CHAINCHAR,'"Key"',120,1523)
LexToken(COMMA,',',120,1528)
LexToken(NUMBER,123,120,1530)
LexToken(RPAREN,')',120,1533)
LexToken(DOTCOMMA,';',120,1534)
LexToken(commentLine,'// Check reserved words',122,1545)
LexToken(FUNCTION,'nullCheck(null)',123,1577)
LexToken(DOTCOMMA,';',123,1592)
LexToken(FUNCTION,'thisCheck(this)',124,1602)
LexToken(DOTCOMMA,';',124,1617)
LexToken(VARIABLE,'superCheck',125,1627)
LexToken(LPAREN,'(',125,1637)
LexToken(SUPER,'super',125,1638)
LexToken(DATAFUNCTION,'.toString()',125,1643)
LexToken(RPAREN,')',125,1654)
LexToken(DOTCOMMA,';',125,1655)
LexToken(PRINT,'print',127,1666)
LexToken(LPAREN,'(',127,1671)
LexToken(VARIABLE,'greeting',127,1672)
LexToken(PLUS,'+',127,1681)
LexToken(CHAINCHAR,'" "',127,1683)
LexToken(PLUS,'+',127,1687)
LexToken(VARIABLE,'initial',127,1689)
LexToken(PLUS,'+',127,1697)
LexToken(CHAINCHAR,"'!'",127,1699)
LexToken(RPAREN,')',127,1702)
LexToken(DOTCOMMA,';',127,1703)
LexToken(RBRACE,'}',128,1709)
LexToken(PRIVATE,'private',130,1716)
LexToken(VOID,'void',130,1724)
LexToken(VARIABLE,'nullCheck',130,1729)
LexToken(LPAREN,'(',130,1738)
LexToken(NEWDATATYPE,'Object',130,1739)
LexToken(VARIABLE,'obj',130,1746)
LexToken(RPAREN,')',130,1749)
LexToken(LBRACE,'{',130,1751)
LexToken(IF,'if',131,1761)
LexToken(LPAREN,'(',131,1764)
LexToken(VARIABLE,'obj',131,1765)
LexToken(EQUALS,'=',131,1769)
LexToken(EQUALS,'=',131,1770)
LexToken(NULL,'null',131,1772)
LexToken(RPAREN,')',131,1776)
LexToken(LBRACE,'{',131,1778)
LexToken(PRINT,'print',132,1792)
LexToken(LPAREN,'(',132,1797)
LexToken(CHAINCHAR,'"Object is null"',132,1798)
LexToken(RPAREN,')',132,1814)
LexToken(DOTCOMMA,';',132,1815)
LexToken(RBRACE,'}',133,1825)
LexToken(RBRACE,'}',134,1831)
LexToken(PRIVATE,'private',136,1838)
LexToken(VOID,'void',136,1846)
LexToken(VARIABLE,'thisCheck',136,1851)
LexToken(LPAREN,'(',136,1860)
LexToken(NEWDATATYPE,'TestClass',136,1861)
LexToken(VARIABLE,'obj',136,1871)
LexToken(RPAREN,')',136,1874)
LexToken(LBRACE,'{',136,1876)
LexToken(IF,'if',137,1886)
LexToken(LPAREN,'(',137,1889)
LexToken(VARIABLE,'obj',137,1890)
LexToken(EQUALS,'=',137,1894)
LexToken(EQUALS,'=',137,1895)
LexToken(THIS,'this',137,1897)
LexToken(RPAREN,')',137,1901)
LexToken(LBRACE,'{',137,1903)
LexToken(PRINT,'print',138,1917)
LexToken(LPAREN,'(',138,1922)
LexToken(CHAINCHAR,'"This object"',138,1923)
LexToken(RPAREN,')',138,1936)
LexToken(DOTCOMMA,';',138,1937)
LexToken(RBRACE,'}',139,1947)
LexToken(RBRACE,'}',140,1953)
LexToken(PRIVATE,'private',142,1960)
LexToken(VOID,'void',142,1968)
LexToken(VARIABLE,'superCheck',142,1973)
LexToken(LPAREN,'(',142,1983)
LexToken(STRING,'String',142,1984)
LexToken(VARIABLE,'str',142,1991)
LexToken(RPAREN,')',142,1994)
LexToken(LBRACE,'{',142,1996)
LexToken(IF,'if',143,2006)
LexToken(LPAREN,'(',143,2009)
LexToken(VARIABLE,'str',143,2010)
LexToken(NEQ,'!=',143,2014)
LexToken(NULL,'null',143,2017)
LexToken(RPAREN,')',143,2021)
LexToken(LBRACE,'{',143,2023)
LexToken(PRINT,'print',144,2037)
LexToken(LPAREN,'(',144,2042)
LexToken(CHAINCHAR,'"Super check passed"',144,2043)
LexToken(RPAREN,')',144,2063)
LexToken(DOTCOMMA,';',144,2064)
LexToken(RBRACE,'}',145,2074)
LexToken(RBRACE,'}',146,2080)
LexToken(PRIVATE,'private',148,2087)
LexToken(VOID,'void',148,2095)
LexToken(PRINT,'print',148,2100)
LexToken(LPAREN,'(',148,2105)
LexToken(STRING,'String',148,2106)
LexToken(VARIABLE,'message',148,2113)
LexToken(RPAREN,')',148,2120)
LexToken(LBRACE,'{',148,2122)
LexToken(NEWDATATYPE,'System',149,2132)
LexToken(DATAATTRIBUTE,'.out',149,2138)
LexToken(DATAFUNCTION,'.println(message)',149,2142)
LexToken(DOTCOMMA,';',149,2159)
LexToken(RBRACE,'}',150,2165)
LexToken(RBRACE,'}',151,2167)
