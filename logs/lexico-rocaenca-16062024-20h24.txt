LexToken(commentBlock,'/* Block comment example\nThis is a test for the block comment token.\n*/',65,1)
LexToken(commentLine,'// Line comment example',67,74)
LexToken(PUBLIC,'public',68,98)
LexToken(CLASS,'class',68,105)
LexToken(NEWDATATYPE,'TestClass',68,111)
LexToken(LBRACE,'{',68,121)
LexToken(PRIVATE,'private',69,127)
LexToken(INT,'int',69,135)
LexToken(VARIABLE,'number',69,139)
LexToken(EQUALS,'=',69,146)
LexToken(NUMBER,42,69,148)
LexToken(DOTCOMMA,';',69,150)
LexToken(PUBLIC,'public',70,156)
LexToken(DOUBLE,'double',70,163)
LexToken(VARIABLE,'decimalNumber',70,170)
LexToken(EQUALS,'=',70,184)
LexToken(FLOAT,3.14,70,186)
LexToken(DOTCOMMA,';',70,190)
LexToken(PROTECTED,'protected',71,196)
LexToken(eanEAN,'eanean',71,206)
LexToken(VARIABLE,'isValid',71,213)
LexToken(EQUALS,'=',71,221)
LexToken(TRUE,'True',71,223)
LexToken(DOTCOMMA,';',71,227)
LexToken(STATIC,'static',72,233)
LexToken(FINAL,'final',72,240)
LexToken(STRING,'String',72,246)
LexToken(NEWDATATYPE,'CONSTANT_STRING',72,253)
LexToken(EQUALS,'=',72,269)
LexToken(CHAINCHAR,'"Hello"',72,271)
LexToken(DOTCOMMA,';',72,278)
LexToken(PRIVATE,'private',73,284)
LexToken(LIST,'List',73,292)
LexToken(INTERNDATATYPE,'<Integer>',73,296)
LexToken(VARIABLE,'myList',73,306)
LexToken(EQUALS,'=',73,313)
LexToken(NEW,'new',73,315)
LexToken(NEWDATATYPE,'ArrayList',73,319)
LexToken(LANGLE,'<',73,328)
LexToken(RANGLE,'>',73,329)
LexToken(LPAREN,'(',73,330)
LexToken(RPAREN,')',73,331)
LexToken(DOTCOMMA,';',73,332)
LexToken(PRIVATE,'private',74,338)
LexToken(NEWDATATYPE,'Map',74,346)
LexToken(LANGLE,'<',74,349)
LexToken(STRING,'String',74,350)
LexToken(COMMA,',',74,356)
LexToken(NEWDATATYPE,'Integer',74,358)
LexToken(RANGLE,'>',74,365)
LexToken(VARIABLE,'myMap',74,367)
LexToken(EQUALS,'=',74,373)
LexToken(NEW,'new',74,375)
LexToken(NEWDATATYPE,'HashMap',74,379)
LexToken(LANGLE,'<',74,386)
LexToken(RANGLE,'>',74,387)
LexToken(LPAREN,'(',74,388)
LexToken(RPAREN,')',74,389)
LexToken(DOTCOMMA,';',74,390)
LexToken(PUBLIC,'public',76,397)
LexToken(STATIC,'static',76,404)
LexToken(VOID,'void',76,411)
LexToken(MAIN,'main',76,416)
LexToken(LPAREN,'(',76,420)
LexToken(STRING,'String',76,421)
LexToken(LBRACKET,'[',76,427)
LexToken(RBRACKET,']',76,428)
LexToken(VARIABLE,'args',76,430)
LexToken(RPAREN,')',76,434)
LexToken(LBRACE,'{',76,436)
LexToken(NEWDATATYPE,'TestClass',77,446)
LexToken(VARIABLE,'instance',77,456)
LexToken(EQUALS,'=',77,465)
LexToken(NEW,'new',77,467)
LexToken(NEWDATATYPE,'TestClass',77,471)
LexToken(LPAREN,'(',77,480)
LexToken(RPAREN,')',77,481)
LexToken(DOTCOMMA,';',77,482)
LexToken(VARIABLE,'instance',78,492)
LexToken(DATAFUNCTION,'.testMethod()',78,500)
LexToken(DOTCOMMA,';',78,513)
LexToken(RBRACE,'}',79,519)
LexToken(PUBLIC,'public',81,526)
LexToken(VOID,'void',81,533)
LexToken(FUNCTION,'testMethod()',81,538)
LexToken(LBRACE,'{',81,551)
LexToken(INT,'int',82,561)
LexToken(VARIABLE,'localVar',82,565)
LexToken(EQUALS,'=',82,574)
LexToken(NUMBER,10,82,576)
LexToken(DOTCOMMA,';',82,578)
LexToken(DOUBLE,'double',83,588)
LexToken(VARIABLE,'pi',83,595)
LexToken(EQUALS,'=',83,598)
LexToken(FLOAT,3.14,83,600)
LexToken(DOTCOMMA,';',83,604)
LexToken(eanEAN,'eanean',84,614)
LexToken(VARIABLE,'flag',84,621)
LexToken(EQUALS,'=',84,626)
LexToken(FALSE,'False',84,628)
LexToken(DOTCOMMA,';',84,633)
LexToken(STRING,'String',85,643)
LexToken(VARIABLE,'greeting',85,650)
LexToken(EQUALS,'=',85,659)
LexToken(CHAINCHAR,'"Hello, World!"',85,661)
LexToken(DOTCOMMA,';',85,676)
LexToken(VARIABLE,'char',86,686)
LexToken(VARIABLE,'initial',86,691)
LexToken(EQUALS,'=',86,699)
LexToken(CHAINCHAR,"'A'",86,701)
LexToken(DOTCOMMA,';',86,704)
LexToken(IF,'if',88,723)
LexToken(LPAREN,'(',88,726)
LexToken(VARIABLE,'localVar',88,727)
LexToken(RANGLE,'>',88,736)
LexToken(NUMBER,5,88,738)
LexToken(AND,'&&',88,740)
LexToken(VARIABLE,'flag',88,743)
LexToken(EQUALS,'=',88,748)
LexToken(EQUALS,'=',88,749)
LexToken(FALSE,'False',88,751)
LexToken(RPAREN,')',88,756)
LexToken(LBRACE,'{',88,758)
LexToken(PRINT,'print',89,772)
LexToken(LPAREN,'(',89,777)
LexToken(CHAINCHAR,'"localVar is greater than 5"',89,778)
LexToken(RPAREN,')',89,806)
LexToken(DOTCOMMA,';',89,807)
LexToken(RBRACE,'}',90,817)
LexToken(ELSE,'else',90,819)
LexToken(LBRACE,'{',90,824)
LexToken(PRINT,'print',91,838)
LexToken(LPAREN,'(',91,843)
LexToken(CHAINCHAR,'"localVar is less than or equal to 5"',91,844)
LexToken(RPAREN,')',91,881)
LexToken(DOTCOMMA,';',91,882)
LexToken(RBRACE,'}',92,892)
LexToken(FOR,'for',94,903)
LexToken(LPAREN,'(',94,907)
LexToken(INT,'int',94,908)
LexToken(VARIABLE,'i',94,912)
LexToken(EQUALS,'=',94,914)
LexToken(NUMBER,0,94,916)
LexToken(DOTCOMMA,';',94,917)
LexToken(VARIABLE,'i',94,919)
LexToken(LANGLE,'<',94,921)
LexToken(NUMBER,10,94,923)
LexToken(DOTCOMMA,';',94,925)
LexToken(VARIABLE,'i',94,927)
LexToken(PLUS,'+',94,928)
LexToken(PLUS,'+',94,929)
LexToken(RPAREN,')',94,930)
LexToken(LBRACE,'{',94,932)
LexToken(VARIABLE,'myList',95,946)
LexToken(DATAFUNCTION,'.add(i)',95,952)
LexToken(DOTCOMMA,';',95,959)
LexToken(RBRACE,'}',96,969)
LexToken(WHILE,'while',98,980)
LexToken(LPAREN,'(',98,986)
LexToken(VARIABLE,'localVar',98,987)
LexToken(RANGLE,'>',98,996)
LexToken(NUMBER,0,98,998)
LexToken(RPAREN,')',98,999)
LexToken(LBRACE,'{',98,1001)
LexToken(VARIABLE,'localVar',99,1015)
LexToken(MINUS,'-',99,1023)
LexToken(MINUS,'-',99,1024)
LexToken(DOTCOMMA,';',99,1025)
LexToken(RBRACE,'}',100,1035)
LexToken(SWITCH,'switch',102,1046)
LexToken(LPAREN,'(',102,1053)
LexToken(VARIABLE,'localVar',102,1054)
LexToken(RPAREN,')',102,1062)
LexToken(LBRACE,'{',102,1064)
LexToken(CASE,'case',103,1078)
LexToken(NUMBER,0,103,1083)
LexToken(TWODOTS,':',103,1084)
LexToken(PRINT,'print',104,1102)
LexToken(LPAREN,'(',104,1107)
LexToken(CHAINCHAR,'"localVar is zero"',104,1108)
LexToken(RPAREN,')',104,1126)
LexToken(DOTCOMMA,';',104,1127)
LexToken(BREAK,'break',105,1145)
LexToken(DOTCOMMA,';',105,1150)
LexToken(DEFAULT,'default',106,1164)
LexToken(TWODOTS,':',106,1171)
LexToken(PRINT,'print',107,1189)
LexToken(LPAREN,'(',107,1194)
LexToken(CHAINCHAR,'"localVar is not zero"',107,1195)
LexToken(RPAREN,')',107,1217)
LexToken(DOTCOMMA,';',107,1218)
LexToken(BREAK,'break',108,1236)
LexToken(DOTCOMMA,';',108,1241)
LexToken(RBRACE,'}',109,1251)
LexToken(TRY,'try',111,1262)
LexToken(LBRACE,'{',111,1266)
LexToken(INT,'int',112,1280)
LexToken(VARIABLE,'result',112,1284)
LexToken(EQUALS,'=',112,1291)
LexToken(VARIABLE,'localVar',112,1293)
LexToken(DIVIDE,'/',112,1302)
LexToken(NUMBER,0,112,1304)
LexToken(DOTCOMMA,';',112,1305)
LexToken(RBRACE,'}',113,1315)
LexToken(CATCH,'catch',113,1317)
LexToken(LPAREN,'(',113,1323)
LexToken(NEWDATATYPE,'ArithmeticException',113,1324)
LexToken(VARIABLE,'e',113,1344)
LexToken(RPAREN,')',113,1345)
LexToken(LBRACE,'{',113,1347)
LexToken(PRINT,'print',114,1361)
LexToken(LPAREN,'(',114,1366)
LexToken(CHAINCHAR,'"Division by zero!"',114,1367)
LexToken(RPAREN,')',114,1386)
LexToken(DOTCOMMA,';',114,1387)
LexToken(RBRACE,'}',115,1397)
LexToken(FINALLY,'finally',115,1399)
LexToken(LBRACE,'{',115,1407)
LexToken(PRINT,'print',116,1421)
LexToken(LPAREN,'(',116,1426)
LexToken(CHAINCHAR,'"End of try-catch block"',116,1427)
LexToken(RPAREN,')',116,1451)
LexToken(DOTCOMMA,';',116,1452)
LexToken(RBRACE,'}',117,1462)
LexToken(VARIABLE,'number',119,1473)
LexToken(EQUALS,'=',119,1480)
LexToken(LPAREN,'(',119,1482)
LexToken(INT,'int',119,1483)
LexToken(RPAREN,')',119,1486)
LexToken(VARIABLE,'pi',119,1488)
LexToken(DOTCOMMA,';',119,1490)
LexToken(commentLine,'// Casting',119,1492)
LexToken(VARIABLE,'myMap',120,1511)
LexToken(DATAATTRIBUTE,'.put',120,1516)
LexToken(LPAREN,'(',120,1520)
LexToken(CHAINCHAR,'"Key"',120,1521)
LexToken(COMMA,',',120,1526)
LexToken(NUMBER,123,120,1528)
LexToken(RPAREN,')',120,1531)
LexToken(DOTCOMMA,';',120,1532)
LexToken(commentLine,'// Check reserved words',122,1543)
LexToken(FUNCTION,'nullCheck(null)',123,1575)
LexToken(DOTCOMMA,';',123,1590)
LexToken(FUNCTION,'thisCheck(this)',124,1600)
LexToken(DOTCOMMA,';',124,1615)
LexToken(VARIABLE,'superCheck',125,1625)
LexToken(LPAREN,'(',125,1635)
LexToken(SUPER,'super',125,1636)
LexToken(DATAFUNCTION,'.toString()',125,1641)
LexToken(RPAREN,')',125,1652)
LexToken(DOTCOMMA,';',125,1653)
LexToken(PRINT,'print',127,1664)
LexToken(LPAREN,'(',127,1669)
LexToken(VARIABLE,'greeting',127,1670)
LexToken(PLUS,'+',127,1679)
LexToken(CHAINCHAR,'" "',127,1681)
LexToken(PLUS,'+',127,1685)
LexToken(VARIABLE,'initial',127,1687)
LexToken(PLUS,'+',127,1695)
LexToken(CHAINCHAR,"'!'",127,1697)
LexToken(RPAREN,')',127,1700)
LexToken(DOTCOMMA,';',127,1701)
LexToken(RBRACE,'}',128,1707)
LexToken(PRIVATE,'private',130,1714)
LexToken(VOID,'void',130,1722)
LexToken(VARIABLE,'nullCheck',130,1727)
LexToken(LPAREN,'(',130,1736)
LexToken(NEWDATATYPE,'Object',130,1737)
LexToken(VARIABLE,'obj',130,1744)
LexToken(RPAREN,')',130,1747)
LexToken(LBRACE,'{',130,1749)
LexToken(IF,'if',131,1759)
LexToken(LPAREN,'(',131,1762)
LexToken(VARIABLE,'obj',131,1763)
LexToken(EQUALS,'=',131,1767)
LexToken(EQUALS,'=',131,1768)
LexToken(NULL,'null',131,1770)
LexToken(RPAREN,')',131,1774)
LexToken(LBRACE,'{',131,1776)
LexToken(PRINT,'print',132,1790)
LexToken(LPAREN,'(',132,1795)
LexToken(CHAINCHAR,'"Object is null"',132,1796)
LexToken(RPAREN,')',132,1812)
LexToken(DOTCOMMA,';',132,1813)
LexToken(RBRACE,'}',133,1823)
LexToken(RBRACE,'}',134,1829)
LexToken(PRIVATE,'private',136,1836)
LexToken(VOID,'void',136,1844)
LexToken(VARIABLE,'thisCheck',136,1849)
LexToken(LPAREN,'(',136,1858)
LexToken(NEWDATATYPE,'TestClass',136,1859)
LexToken(VARIABLE,'obj',136,1869)
LexToken(RPAREN,')',136,1872)
LexToken(LBRACE,'{',136,1874)
LexToken(IF,'if',137,1884)
LexToken(LPAREN,'(',137,1887)
LexToken(VARIABLE,'obj',137,1888)
LexToken(EQUALS,'=',137,1892)
LexToken(EQUALS,'=',137,1893)
LexToken(THIS,'this',137,1895)
LexToken(RPAREN,')',137,1899)
LexToken(LBRACE,'{',137,1901)
LexToken(PRINT,'print',138,1915)
LexToken(LPAREN,'(',138,1920)
LexToken(CHAINCHAR,'"This object"',138,1921)
LexToken(RPAREN,')',138,1934)
LexToken(DOTCOMMA,';',138,1935)
LexToken(RBRACE,'}',139,1945)
LexToken(RBRACE,'}',140,1951)
LexToken(PRIVATE,'private',142,1958)
LexToken(VOID,'void',142,1966)
LexToken(VARIABLE,'superCheck',142,1971)
LexToken(LPAREN,'(',142,1981)
LexToken(STRING,'String',142,1982)
LexToken(VARIABLE,'str',142,1989)
LexToken(RPAREN,')',142,1992)
LexToken(LBRACE,'{',142,1994)
LexToken(IF,'if',143,2004)
LexToken(LPAREN,'(',143,2007)
LexToken(VARIABLE,'str',143,2008)
LexToken(NEQ,'!=',143,2012)
LexToken(NULL,'null',143,2015)
LexToken(RPAREN,')',143,2019)
LexToken(LBRACE,'{',143,2021)
LexToken(PRINT,'print',144,2035)
LexToken(LPAREN,'(',144,2040)
LexToken(CHAINCHAR,'"Super check passed"',144,2041)
LexToken(RPAREN,')',144,2061)
LexToken(DOTCOMMA,';',144,2062)
LexToken(RBRACE,'}',145,2072)
LexToken(RBRACE,'}',146,2078)
LexToken(PRIVATE,'private',148,2085)
LexToken(VOID,'void',148,2093)
LexToken(PRINT,'print',148,2098)
LexToken(LPAREN,'(',148,2103)
LexToken(STRING,'String',148,2104)
LexToken(VARIABLE,'message',148,2111)
LexToken(RPAREN,')',148,2118)
LexToken(LBRACE,'{',148,2120)
LexToken(NEWDATATYPE,'System',149,2130)
LexToken(DATAATTRIBUTE,'.out',149,2136)
LexToken(DATAFUNCTION,'.println(message)',149,2140)
LexToken(DOTCOMMA,';',149,2157)
LexToken(RBRACE,'}',150,2163)
LexToken(RBRACE,'}',151,2165)
